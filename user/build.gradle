plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdkVersion Android.compileSdkVersion
    buildToolsVersion Android.buildToolsVersion

    defaultConfig {
        /**
         * 资源同名问题处理
         * 每个子模块给资源名添加前缀，具体做法是在每个子模块的build.gradle文件的android块内添加一行代码：resourcePrefix “资源名前缀”：
         */
        resourcePrefix "user_"
        minSdkVersion Android.minSdkVersion
        targetSdkVersion Android.targetSdkVersion
        versionCode Android.versionCode
        versionName Android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true  //压缩优化

            consumerProguardFiles 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    kapt {
        useBuildCache = true
        javacOptions {
            option("-Xmaxerrs", 500)
        }
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation Support.kotlin_stdlib_jdk8
    testImplementation Support.junit
    androidTestImplementation Support.junit_ext
    androidTestImplementation Support.espresso_core
    // add lib
    implementation project(path: ':ktx')
    implementation project(path: ':core')
    implementation project(path: ':mtime-ktx')
    implementation project(path: ':retrofit')
    implementation project(path: ':app-api')
    implementation project(path: ':app-router')

    implementation Dependencies.gson
    //组件中依赖阿里路由编译框架
    kapt Dependencies.arouter_compiler

    api Push.jiguang_jpush
    api Push.jiguang_jcore
    api Push.jiguang_jverification

}